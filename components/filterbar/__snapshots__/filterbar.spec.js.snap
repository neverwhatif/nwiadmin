// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilterBar should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterBar
    cta={null}
    filters={[Function]}
    hasSearch={true}
    history={
      Object {
        "push": [Function],
      }
    }
    isVisible={false}
    itemName={null}
    location={
      Object {
        "pathname": "/lorem",
        "search": "",
      }
    }
    setVisibility={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <aside
        className="root"
      >
        <div
          className="search"
        >
          <TextInput
            name="search"
            onChange={[Function]}
            placeholder="Search..."
            value=""
          />
        </div>
        <div
          className="cta"
        >
          <Button
            onClick={[Function]}
          >
            Filters...
          </Button>
        </div>
        <ModalForm
          isOpen={false}
          onRequestClose={[Function]}
          onSubmit={[Function]}
          submitLabel="Apply"
          title="Search & Filter "
          type="filters"
        >
          <div />
        </ModalForm>
      </aside>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="search"
          >
            <TextInput
              name="search"
              onChange={[Function]}
              placeholder="Search..."
              value=""
            />
          </div>,
          <div
            className="cta"
          >
            <Button
              onClick={[Function]}
            >
              Filters...
            </Button>
          </div>,
          <ModalForm
            isOpen={false}
            onRequestClose={[Function]}
            onSubmit={[Function]}
            submitLabel="Apply"
            title="Search & Filter "
            type="filters"
          >
            <div />
          </ModalForm>,
        ],
        "className": "root",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <TextInput
              name="search"
              onChange={[Function]}
              placeholder="Search..."
              value=""
            />,
            "className": "search",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "search",
              "onChange": [Function],
              "placeholder": "Search...",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "TextInput",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              null,
              undefined,
              <Button
                onClick={[Function]}
              >
                Filters...
              </Button>,
            ],
            "className": "cta",
          },
          "ref": null,
          "rendered": Array [
            null,
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Filters...",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Filters...",
              "type": "Button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div />,
            "isOpen": false,
            "onRequestClose": [Function],
            "onSubmit": [Function],
            "submitLabel": "Apply",
            "title": "Search & Filter ",
            "type": "filters",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "ModalForm",
        },
      ],
      "type": "aside",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <aside
          className="root"
        >
          <div
            className="search"
          >
            <TextInput
              name="search"
              onChange={[Function]}
              placeholder="Search..."
              value=""
            />
          </div>
          <div
            className="cta"
          >
            <Button
              onClick={[Function]}
            >
              Filters...
            </Button>
          </div>
          <ModalForm
            isOpen={false}
            onRequestClose={[Function]}
            onSubmit={[Function]}
            submitLabel="Apply"
            title="Search & Filter "
            type="filters"
          >
            <div />
          </ModalForm>
        </aside>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="search"
            >
              <TextInput
                name="search"
                onChange={[Function]}
                placeholder="Search..."
                value=""
              />
            </div>,
            <div
              className="cta"
            >
              <Button
                onClick={[Function]}
              >
                Filters...
              </Button>
            </div>,
            <ModalForm
              isOpen={false}
              onRequestClose={[Function]}
              onSubmit={[Function]}
              submitLabel="Apply"
              title="Search & Filter "
              type="filters"
            >
              <div />
            </ModalForm>,
          ],
          "className": "root",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextInput
                name="search"
                onChange={[Function]}
                placeholder="Search..."
                value=""
              />,
              "className": "search",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "search",
                "onChange": [Function],
                "placeholder": "Search...",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "TextInput",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                null,
                undefined,
                <Button
                  onClick={[Function]}
                >
                  Filters...
                </Button>,
              ],
              "className": "cta",
            },
            "ref": null,
            "rendered": Array [
              null,
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Filters...",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Filters...",
                "type": "Button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div />,
              "isOpen": false,
              "onRequestClose": [Function],
              "onSubmit": [Function],
              "submitLabel": "Apply",
              "title": "Search & Filter ",
              "type": "filters",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "ModalForm",
          },
        ],
        "type": "aside",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
