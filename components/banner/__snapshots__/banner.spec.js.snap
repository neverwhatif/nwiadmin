// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Banner should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BannerComponent
    isError={false}
    me={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": null,
      "className": "root rootPink",
    },
    "ref": null,
    "rendered": null,
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": null,
        "className": "root rootPink",
      },
      "ref": null,
      "rendered": null,
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Banner should render 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BannerComponent
    isError={false}
    me={
      Object {
        "name": "Lorem Ipsum",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <BannerLogo />
        <PrimaryNav />
        <MePanel
          data={
            Object {
              "name": "Lorem Ipsum",
            }
          }
        />
      </React.Fragment>,
      "className": "root rootPink",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <BannerLogo />,
          <PrimaryNav />,
          <MePanel
            data={
              Object {
                "name": "Lorem Ipsum",
              }
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "BannerLogo",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "PrimaryNav",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "data": Object {
              "name": "Lorem Ipsum",
            },
          },
          "ref": null,
          "rendered": null,
          "type": "MePanel",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <BannerLogo />
          <PrimaryNav />
          <MePanel
            data={
              Object {
                "name": "Lorem Ipsum",
              }
            }
          />
        </React.Fragment>,
        "className": "root rootPink",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <BannerLogo />,
            <PrimaryNav />,
            <MePanel
              data={
                Object {
                  "name": "Lorem Ipsum",
                }
              }
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "BannerLogo",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "PrimaryNav",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "data": Object {
                "name": "Lorem Ipsum",
              },
            },
            "ref": null,
            "rendered": null,
            "type": "MePanel",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
